# Generated by Django 2.2.5 on 2019-10-08 03:00

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_number', models.CharField(max_length=5)),
                ('street', models.CharField(max_length=50)),
                ('locality', models.CharField(max_length=50)),
                ('postal_code', models.CharField(max_length=5, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(5)])),
                ('state', models.CharField(max_length=15)),
                ('state_code', models.CharField(max_length=2, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(2)])),
            ],
            options={
                'unique_together': {('street_number', 'street', 'locality', 'postal_code', 'state_code')},
            },
        ),
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('address', models.TextField(unique=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
            ],
        ),
        migrations.CreateModel(
            name='MLSNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=12, unique=True)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Agency')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mls_number', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NearbyAttraction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('type', models.CharField(choices=[('SCHOOL_ELEM', 'Public Elementary School'), ('SCHOOL_MIDDLE', 'Public Middle School'), ('SCHOOL_HIGH', 'Public High School'), ('SCHOOL_PRIVATE', 'Private School'), ('SHOPPING', 'Shopping Area'), ('NEIGHBORHOOD', 'Neighborhood'), ('ENTERTAINMENT', 'Entertainment Area')], max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('square_footage', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('type', models.CharField(choices=[('APARTMENT', 'Apartment'), ('CONDO', 'Condominium'), ('DUPLEX', 'Duplex Home'), ('HOUSE', 'Standalone House')], max_length=12)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Address')),
            ],
        ),
        migrations.CreateModel(
            name='Realtor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mls', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='database.MLSNumber')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asking_price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField()),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.MLSNumber')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Property')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('name', models.CharField(max_length=25)),
                ('type', models.CharField(choices=[('BEDROOM', 'Bedroom'), ('BATHROOM', 'Bathroom'), ('KITCHEN', 'Kitchen'), ('DINING_ROOM', 'Dining Room'), ('OFFICE', 'Office'), ('DEN', 'Den'), ('RECREATION', 'Recreational Room')], max_length=15)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Property')),
            ],
            options={
                'unique_together': {('name', 'property')},
            },
        ),
        migrations.CreateModel(
            name='NearbyAttractionPropertyConnector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.NearbyAttraction')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Property')),
            ],
            options={
                'unique_together': {('attraction', 'property')},
            },
        ),
    ]
